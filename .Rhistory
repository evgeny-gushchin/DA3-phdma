AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
get(models[4])
get(models[3])
get(models[2])
get(models[3])
# models 1-4
# Model 1: Linear regression on age
model1 <- as.formula(y ~ age + age_squared + educ_level)
model2 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status)
model3 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new)
model4 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + race_new + marital + class_new + prcitshp + industry + educ_level:sex + age:sex)
# Running simple OLS
reg1 <- feols(model1, data=data, vcov = 'hetero')
reg2 <- feols(model2, data=data, vcov = 'hetero')
reg3 <- feols(model3, data=data, vcov = 'hetero')
reg4 <- feols(model4, data=data, vcov = 'hetero')
models <- c("reg1", "reg2","reg3", "reg4")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
regressors <- c()
# Get for all models
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
get(models[4])
stargazer(main_table, summary = F, digits=2, float=F, out="A1-results-table-Gushchin.tex")
stargazer(main_table, summary = F, digits=2, float=F, type="text",  out="A1-results-table-Gushchin.tex")
# models 1-4
# Model 1: Linear regression on age
model1 <- as.formula(y ~ age + age_squared + educ_level)
model2 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status)
model3 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new)
model4 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + race_new + prcitshp + industry + educ_level:sex + age:sex)
# Running simple OLS
reg1 <- feols(model1, data=data, vcov = 'hetero')
reg2 <- feols(model2, data=data, vcov = 'hetero')
reg3 <- feols(model3, data=data, vcov = 'hetero')
reg4 <- feols(model4, data=data, vcov = 'hetero')
models <- c("reg1", "reg2","reg3", "reg4")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
regressors <- c()
# Get for all models
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
# models 1-4
# Model 1: Linear regression on age
model1 <- as.formula(y ~ age + age_squared + educ_level)
model2 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status)
model3 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new)
model4 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + race_new) #+ prcitshp + industry + educ_level:sex + age:sex)
# Running simple OLS
reg1 <- feols(model1, data=data, vcov = 'hetero')
reg2 <- feols(model2, data=data, vcov = 'hetero')
reg3 <- feols(model3, data=data, vcov = 'hetero')
reg4 <- feols(model4, data=data, vcov = 'hetero')
models <- c("reg1", "reg2","reg3", "reg4")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
regressors <- c()
# Get for all models
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
stargazer(main_table, summary = F, digits=2, float=F, out="A1-results-table-Gushchin.tex")
model4 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + age:sex)#race_new + prcitshp + industry + educ_level:sex + age:sex)
# Running simple OLS
reg1 <- feols(model1, data=data, vcov = 'hetero')
reg2 <- feols(model2, data=data, vcov = 'hetero')
reg3 <- feols(model3, data=data, vcov = 'hetero')
reg4 <- feols(model4, data=data, vcov = 'hetero')
models <- c("reg1", "reg2","reg3", "reg4")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
regressors <- c()
# Get for all models
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
stargazer(main_table, summary = F, digits=2, float=F, out="A1-results-table-Gushchin.tex")
# models 1-4
# Model 1: Linear regression on age
model1 <- as.formula(y ~ age + age_squared + educ_level)
model2 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status)
model3 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new)
model4 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + age:sex + educ_level:sex)#race_new + prcitshp + industry + educ_level:sex + age:sex)
# Running simple OLS
reg1 <- feols(model1, data=data, vcov = 'hetero')
reg2 <- feols(model2, data=data, vcov = 'hetero')
reg3 <- feols(model3, data=data, vcov = 'hetero')
reg4 <- feols(model4, data=data, vcov = 'hetero')
models <- c("reg1", "reg2","reg3", "reg4")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
regressors <- c()
# Get for all models
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
# models 1-4
# Model 1: Linear regression on age
model1 <- as.formula(y ~ age + age_squared + educ_level)
model2 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status)
model3 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + age:sex)
model4 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + age:sex + prcitshp)#race_new + prcitshp + industry + educ_level:sex)
# Running simple OLS
reg1 <- feols(model1, data=data, vcov = 'hetero')
reg2 <- feols(model2, data=data, vcov = 'hetero')
reg3 <- feols(model3, data=data, vcov = 'hetero')
reg4 <- feols(model4, data=data, vcov = 'hetero')
models <- c("reg1", "reg2","reg3", "reg4")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
regressors <- c()
# Get for all models
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
model4 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + age:sex + industry)#race_new + prcitshp + industry + educ_level:sex)
# Running simple OLS
reg1 <- feols(model1, data=data, vcov = 'hetero')
reg2 <- feols(model2, data=data, vcov = 'hetero')
reg3 <- feols(model3, data=data, vcov = 'hetero')
reg4 <- feols(model4, data=data, vcov = 'hetero')
models <- c("reg1", "reg2","reg3", "reg4")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
regressors <- c()
# Get for all models
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
# models 1-4
# Model 1: Linear regression on age
model1 <- as.formula(y ~ age + age_squared + educ_level)
model2 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status)
model3 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + age:sex)
model4 <- as.formula(y ~ age + age_squared + educ_level + min_wage + union_status + sex + class_new + age:sex + race_new + prcitshp + industry + educ_level:sex)
# Running simple OLS
reg1 <- feols(model1, data=data, vcov = 'hetero')
reg2 <- feols(model2, data=data, vcov = 'hetero')
reg3 <- feols(model3, data=data, vcov = 'hetero')
reg4 <- feols(model4, data=data, vcov = 'hetero')
models <- c("reg1", "reg2","reg3", "reg4")
AIC <- c()
BIC <- c()
RMSE <- c()
RSquared <- c()
regr <- c()
regressors <- c()
# Get for all models
for ( i in 1:length(models)){
AIC[i] <- AIC(get(models[i]))
BIC[i] <- BIC(get(models[i]))
RMSE[i] <- sqrt(sum((data$y-predict(get(models[i])))^2)/length(data$y))
regr[[i]] <- coeftest(get(models[i]), vcov = sandwich)
regressors[i] <- length(get(models[i])$coefficients)-1
}
# set number of folds
k <- 4
set.seed(13505)
cv1 <- train(model1, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv2 <- train(model2, data, method = "lm", trControl = trainControl(method = "cv", number = k))
set.seed(13505)
cv3 <- train(model3, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
set.seed(13505)
cv4 <- train(model4, data, method = "lm", trControl = trainControl(method = "cv", number = k), na.action = "na.omit")
# calculate average rmse
cv <- c("cv1", "cv2", "cv3", "cv4")
rmse_cv <- c()
for(i in 1:length(cv)){
rmse_cv[i] <- sqrt((get(cv[i])$resample[[1]][1]^2 +
get(cv[i])$resample[[1]][2]^2 +
get(cv[i])$resample[[1]][3]^2 +
get(cv[i])$resample[[1]][4]^2)/4)
}
# summarize results
cv_mat <- data.frame(rbind(cv1$resample[4], "Average"),
rbind(cv1$resample[1], rmse_cv[1]),
rbind(cv2$resample[1], rmse_cv[2]),
rbind(cv3$resample[1], rmse_cv[3]),
rbind(cv4$resample[1], rmse_cv[4])
)
colnames(cv_mat)<-c("Resample","Model1", "Model2", "Model3", "Model4")
cv_mat
# all results in one table
main_table <- data.frame(rbind(t(BIC), t(RMSE), rmse_cv, regressors))
colnames(main_table)<-c("Model1", "Model2", "Model3", "Model4")
row.names(main_table) <- c("BIC", "RMSE (full sample)", "RMSE (4-fold cross validation)", "Number of regressors")
main_table
stargazer(main_table, summary = F, digits=2, float=F, out="A1-results-table-Gushchin.tex")
stargazer(main_table, summary = F, digits=2, float=F, type="text",  out="A1-results-table-Gushchin.tex")
